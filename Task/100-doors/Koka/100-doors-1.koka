type state
  Open
  Closed

fun toggle(self: state): state
  match self
    Open   -> Closed
    Closed -> Open

inline extern unsafe-assign : forall<a> ( v : vector<a>, i : ssize_t, x : a ) -> total ()
  c "kk_vector_unsafe_assign"

fun main()
  val doors = vector(100, Closed)
  for(0,99) fn(pass)
    var door := pass
    while { door < 99 }
      doors.unsafe-assign(door.ssize_t, doors[door].toggle)
      door := door + (pass+1)
  doors.foreach-indexed fn(idx, it)
    match it
      Open   -> println("door " ++ (idx + 1).show ++ " is open")
      Closed -> println("door " ++ (idx + 1).show ++ " is closed")
