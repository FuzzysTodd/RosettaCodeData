PUT {[1]: 1} IN r.list
PUT {[1]: 2} IN s.list

HOW TO EXTEND R TO n:
    SHARE r.list, s.list
    WHILE n > #r.list:
        PUT r.list[#r.list] + s.list[#r.list] IN next.r
        FOR i IN {s.list[#s.list]+1 .. next.r-1}:
            PUT i IN s.list[#s.list+1]
        PUT next.r IN r.list[#r.list+1]
        PUT next.r + 1 IN s.list[#s.list+1]

HOW TO EXTEND S TO n:
    SHARE r.list, s.list
    WHILE n > #s.list: EXTEND R TO #r.list + 1

HOW TO RETURN ffr n:
    SHARE r.list
    IF n > #r.list: EXTEND R TO n
    RETURN r.list[n]

HOW TO RETURN ffs n:
    SHARE s.list
    IF n > #s.list: EXTEND S TO n
    RETURN s.list[n]

WRITE "R[1..10]:"
FOR i IN {1..10}: WRITE ffr i
WRITE /

PUT {} IN thousand
FOR i IN {1..40}: INSERT ffr i IN thousand
FOR i IN {1..960}: INSERT ffs i IN thousand
IF thousand = {1..1000}:
    WRITE "R[1..40] + S[1..960] = [1..1000]"/
