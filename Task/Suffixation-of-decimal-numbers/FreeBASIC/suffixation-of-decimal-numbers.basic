#include "string.bi"

#define MIN(a, b) iif((a) < (b), (a), (b))

Dim Shared As String*6 Suffixes(13) = {"", "K", "M", "G", "T", "P", "E", "Z", "Y", "X", "W", "V", "U", "googol"}

Function ReplaceString(Byval s As String, Byval find As String, Byval replaceWith As String) As String
    Dim posic As Integer
    posic = Instr(s, find)
    While posic > 0
        s = Left(s, posic - 1) & replaceWith & Mid(s, posic + Len(find))
        posic = Instr(posic + Len(replaceWith), s, find)
    Wend
    Return s
End Function

Function suffize(num As String, digits As Integer, bbase As Integer) As String
    Dim As Integer exponentDist
    exponentDist = Iif(bbase = 2, 10, 3)

    Dim As String numSign = ""
    If Left(num, 1) = "+" Or Left(num, 1) = "-" Then
        numSign = Left(num, 1)
        num = Mid(num, 2)
    End If

    num = ReplaceString(num, ",", "")

    Dim As Double n = Val(num)
    Dim As Integer suffixIndex
    If bbase = 10 And n >= 1e100 Then
        suffixIndex = 13
        n /= 1e100
    Elseif n > 1 Then
        Dim As Integer magnitude = Int(Log(n) / Log(bbase))
        suffixIndex = MIN(magnitude \ exponentDist, 12)
        n /= bbase ^ (exponentDist * suffixIndex)
    Else
        suffixIndex = 0
    End If

    Dim As String numStr
    If digits > 0 Then
        numStr = Format(n, "0." & String(digits, "#"))
    Elseif digits = 0 Then
        numStr = Format(Int(n), "0")
    Else
        numStr = Format(n, "0.###")
    End If

    Return numSign & numStr & Suffixes(suffixIndex) & Iif(bbase = 2, "i", "")
End Function

Print "[87,654,321]: "; suffize("87,654,321", 3, 10)
Print "[-998,877,665,544,332,211,000 / digits = 3]: "; suffize("-998877665544332211000", 3, 10)
Print "[+112,233 / digits = 0]: "; suffize("+112233", 0, 10)
Print "[16,777,216 / digits = 1]: "; suffize("16777216", 1, 10)
Print "[456,789,100,000,000 / digits = 2]: "; suffize("456789100000000", 2, 10)
Print "[456,789,100,000,000 / digits = 2 / base = 10]: "; suffize("456789100000000", 2, 10)
Print "[456,789,100,000,000 / digits = 5 / base = 2]: "; suffize("456789100000000", 5, 2)
Print "[456,789,100,000.000e+000 / digits = 0 / base = 10]: "; suffize("456789100000", 0, 10)
Print "[+16777216 / base = 2]: "; suffize("+16777216", 3, 2)
Print "[1.2e101]: "; suffize("1.2e101", 3, 10)

Sleep
