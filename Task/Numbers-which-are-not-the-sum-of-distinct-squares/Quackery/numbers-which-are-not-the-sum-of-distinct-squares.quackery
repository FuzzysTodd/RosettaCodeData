  [ [] swap
    behead swap
    witheach
      [ 2dup = iff
          drop done
        dip join ]
    join ]                          is unique  ( [ --> [   )

  [ stack ]                         is cut     (   --> s   )

  [ -1 cut put
    1 temp put
    1 swap
    behead swap
     witheach
      [ tuck - -1 = iff
          [ dip 1+
            over temp share
            > if
              [ over temp replace
                 i^ cut replace ] ]
        else
          [ nip 1 swap ] ]
     2drop
     temp take cut take ]           is maxrun  ( [ --> n n )

  [ [] swap 0 over
    witheach [ bit | ]
    swap -1 peek times
      [ dup i^ bit & not if
          [ dip [ i^ join ] ] ]
    drop ]                          is missing ( [ --> [   )

  1 temp put
  ' [ 0 ]
  1 from
    [ dup witheach
        [ temp share +
          join ]
      sort unique
      dup maxrun drop
      index 2 + temp tally
      temp share > iff
        end done
      2 incr ]
  temp release
  dup maxrun
  nip split
  drop missing
  say "Numbers that are not the sum of distinct squares:"
  cr echo
