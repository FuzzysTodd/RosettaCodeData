  [ ' [ 1 ] swap
    behead swap witheach
      [ dup dip
          [ = iff
              [ -1 pluck
                1+ join ]
            else
              [ 1 join ] ] ]
    drop ]                        is runs         ( [ --> [ )

   [ 1 over find swap found not ] is powerful     ( [ --> b )

   [ behead swap witheach gcd
     1 = ]                        is imperfect    ( [ --> b )

  [ dup 2 < iff
      [ drop false ] done
    primefactors runs
    dup powerful iff
      imperfect
    else [ drop false ] ]         is achilles    ( [ --> b )

 [ dup achilles iff
     [ totient achilles ]
       else [ drop false ] ]      is strong    ( [ --> b )

  [] 0
  [ 1+ dup achilles if
      [ tuck join swap ]
   over size 50 = until ]
  drop
  say "First fifty achilles numbers:" cr
  echo
  cr cr
  [] 0
  [ 1+ dup strong if
      [ tuck join swap ]
   over size 20 = until ]
  drop
  say "First twenty strong achilles numbers:" cr
  echo
  cr cr
  0 100 times
    [ i^ achilles if 1+ ]
  say "Achilles numbers with 2 digits: " echo
  cr
  0 900 times
    [ i^ 100 + achilles if 1+ ]
  say "Achilles numbers with 3 digits: " echo
  cr
  0 9000 times
    [ i^ 1000 + achilles if 1+ ]
  say "Achilles numbers with 4 digits: " echo
  cr
  0 90000 times
    [ i^ 10000 + achilles if 1+ ]
  say "Achilles numbers with 5 digits: " echo
  cr
