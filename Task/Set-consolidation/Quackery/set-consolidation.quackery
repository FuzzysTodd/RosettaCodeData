  [ 0 swap witheach [ bit | ] ] is ->set        ( $ --> { )

  [ say "{" 0 swap
    [ dup 0 != while
      dup 1 & if [ over emit ]
      1 >> dip 1+ again ]
    2drop say "} " ]             is echoset     ( { -->   )

  [ [] swap dup size 1 - times
      [ behead over witheach
          [ 2dup & iff
              [ | swap i^ poke
                [] conclude ]
            else drop ]
           swap dip join ]
    join ]                       is consolidate ( [ --> [ )

  [ dup witheach echoset
    say "--> "
    consolidate witheach echoset
    cr ]                         is task        ( [ -->   )

  $ "AB" ->set
  $ "CD" ->set join
  task
  $ "AB" ->set
  $ "BD" ->set join
  task
  $ "AB" ->set
  $ "CD" ->set join
  $ "DB" ->set join
  task
  $ "HIK" ->set
  $ "AB"  ->set join
  $ "CD"  ->set join
  $ "DB"  ->set join
  $ "FGH" ->set join
  task
