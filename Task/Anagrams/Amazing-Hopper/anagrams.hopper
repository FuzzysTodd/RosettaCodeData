#include <basico.h>

#define MAX_LINE   30

algoritmo

    fd=0, filas=0
    word={}, 2da columna={}
    old_word="",new_word=""
    dimensionar (1,2) matriz de cadenas 'result'
    pos=0

    token.separador'""'

    abrir para leer("basica/unixdict.txt",fd)

    iterar mientras ' no es fin de archivo (fd) '
       usando 'MAX_LINE', leer línea desde(fd),
       ---copiar en 'old_word'---, separar para 'word '
       word, ---retener--- ordenar esto,
       encadenar en 'new_word'

       matriz.buscar en tabla (1,new_word,result)
       copiar en 'pos'
       si ' es negativo? '
           new_word,old_word, pegar fila en 'result'
       sino
           #( result[pos,2] = cat(result[pos,2],cat(",",old_word) ) )
       fin si

    reiterar

    cerrar archivo(fd)

    guardar 'filas de (result)' en 'filas'
    #( 2da columna = result[2:filas, 2] )
    fijar separador '","'
    tomar '2da columna'
    contar tokens en '2da columna' ---retener resultado,
    obtener máximo valor,es mayor o igual?, replicar esto
    compactar esto

    fijar separador 'NL', luego imprime todo

terminar
