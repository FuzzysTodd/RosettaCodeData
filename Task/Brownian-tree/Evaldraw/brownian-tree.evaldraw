enum{SIZE=256, PARTICLES_PER_FRAME=10, PARTICLE_OK, GIVE_UP};
static world[SIZE][SIZE];
()
{
  // set the seed
  if (numframes==0) world[SIZE/2][SIZE/2] = 1;

  t = klock();
  simulate_brownian_tree(t);

  cls(0);
  for (y = 0; y < SIZE; y++){
    for (x = 0; x < SIZE; x++){
      cell = world[y][x];
      if ( cell ) {
        s = 100; // color scale
        setcol(128+(s*cell % 128), 128+(s*.7*cell % 128), 128+(s*.1*cell % 128) );
        setpix(x,y);
      }
    }
  }
  moveto(0,SIZE+15);
  setcol(0xffffff);
  printf("%g frames", numframes);
}

plop_particle(&px, &py) {
  for (try=0; try<1000; try++) {
    px = int(rnd*SIZE);
    py = int(rnd*SIZE);
    if (world[py][px] == 0) return PARTICLE_OK;
  }
  return GIVE_UP;
}

simulate_brownian_tree(time){
  for(iter=0; iter<PARTICLES_PER_FRAME; iter++) // Rate of particle creation
  {
    // set particle's initial position
    px=0; py=0;
    if ( plop_particle(px,py) == GIVE_UP ) return;

    while (1) { // Keep iterating until we bump into a solid particle
      // randomly choose a direction
      dx = int(rnd * 3) - 1;
      dy = int(rnd * 3) - 1;

      if (dx + px < 0 || dx + px >= SIZE || dy + py < 0 || dy + py >= SIZE)
      {
        // Restart if outside of screen
        if ( plop_particle(px,py) == GIVE_UP ) return;
      }else if (world[py + dy][px + dx]){
        // bumped into something
        world[py][px] = time;
        break;
      }else{
        py += dy;
        px += dx;
      }
    }
  }
}
