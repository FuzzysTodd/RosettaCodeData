#include <jambo.h>

Main
    e=0, se=""
    Try
        Gosub 'Foo'
    Catch (e)
        Get msg exception, and Move to 'se'
        Printnl ("+-MAIN Error: ",e, " : ", se )
    Finish
End

Subrutines

/*
This "Try" is not considered nested, then, it is necessary
to capture the error and raise the error
*/
Define ' Foo '
    Try
        Gosub ' Bar '
    Catch (e)
        Get msg exception, and Move to 'se'
        Free try // absolutly nessesary in this chase!
        Raise (e, Cat ("\n+--FUNC FOO: ", se) )
    Finish
Return

Define ' Bar '
    Try
        Set '0', Gosub ' Biz '
        Set '1', Gosub ' Biz '
    Catch(e)
        Get msg exception, and Move to 'se'
        Free try // absolutly nessesary in this chase!
        Raise (e, Cat ("\n+---FUNC BAR: ", se) )
    Finish

Return

Define ' Biz, x '
    a=0, b=0
    If ( x )
        Let ' b:=Sqrt(-1) '
        Nan( a ) do{ Raise (1000,"\n+----Func BIZ: NaN!") }
    Else
        #( a=log(-1) + log(-1) )
        Nan( a ) do{ Raise (1001,"\n+----Func BIZ: NaN!") }
    End If

    Printnl ' "a = ", a, " b = ", b '

Return
