arraybase 1
call sieveOfPritchard(150, true)
call sieveOfPritchard(1e6, false)
end

function min(a, b)
  if a < b then return a else return b
end function

subroutine sieveOfPritchard(limit, imprime)
  dim members[limit + 1] fill false
  members[1] = true
  ub = members[?]
  stepLength = 1
  prime = 2
  rtlim = sqr(limit)
  nlimit = 2
  dim primes[1]
  cont = 0

  while prime <= rtlim
    if stepLength < limit then
      for w = 1 to ub
        if members[w] then
          dim n = w + stepLength
          while n <= nlimit
            members[n] = true
            n += stepLength
          end while
        end if
      next
      stepLength = nlimit
    end if

    np = 5
    dim mcpy[ub]
    for i = 1 to ub
      mcpy[i] = members[i]
    next

    for i = 1 to ub
      if mcpy[i] then
        if np = 5 and i > prime then np = i
        dim n = prime * i
        if n > limit then exit for
        members[n] = false
      end if
    next

    if np < prime then exit while
    cont += 1
    redim primes(cont)
    primes[cont] = prime
    if prime = 2 then prime = 3 else prime = np
    nlimit = min(stepLength * prime, limit)
  end while

  dim newPrimes(ub)
  for i = 2 to ub
    if members[i] then newPrimes[i] = i
  next

  cont = 0
  for i = 1 to primes[?]
    if imprime then print " "; primes[i];
    cont += 1
  next
  for i = 1 to ub
    if newPrimes[i] then
      cont += 1
      if imprime then print " "; i;
    end if
  next
  if not imprime then print : print "Number of primes up to "; limit; ": "; cont
end subroutine
