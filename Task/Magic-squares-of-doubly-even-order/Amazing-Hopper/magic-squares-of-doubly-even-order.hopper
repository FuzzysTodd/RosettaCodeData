/*
  Magic squares of doubly even order. Rosettacode.org
  By Mr. Dalien.
*/

#include <basico.h>

#proto cuadradomágico(_X_)
#synon _cuadradomágico    generarcuadradomágico

principal {
    decimales '0', fijar separador 'NULO'

    malla de bits(bits,'1;0;0;1','0;1;1;0','0;1;1;0','1;0;0;1')

    borrar pantalla
    iterar para( i=1; n=4, #(i<=3), ++i; #(n=4*i) )
        dim( #(n*n) ) matriz de ceros 'sqr'
        generar cuadrado mágico (n);
        ir a sub ( meter en tabla, sqr, #(n+1) ), para 'sqr'
        imprimir '"Magic square order ",n,\
                  "\nMagic constant : ",#((n * n + 1) * n / 2),\
                  NL,sqr,NL,NL'
        luego limpiar 'sqr'
    siguiente
    terminar
}

subrutinas

sub( meter en tabla, s, n ) {
    i=n,rareti(i, 'i')
    retener 'n', insertar columnas en 's'
                 insertar filas en 's'
    #basic{
       s[1:2:2*n-1,1:_end_]   = "---"
       s[1:_end_, 1:2:2*n-1]  = "|"
       s[1:2:_end_,1:2:_end_] = "+"
    }
    retornar 's'
}

cuadrado mágico ( n )
    iterar para ( cr=0;i=0, #(cr<n), ++cr )
         iterar para ( cc=0, #(cc<n), ++cc;++i )
             #( sqr[ (cc+n*cr)+1 ] = (bits[(cr%4+1),(cc%4+1)]) ? (i+1) : (n^2-i); )
         siguiente
    siguiente
    #( sqr = lpad(" ",3,string(sqr)))
    redim ( sqr, n, n )
retornar
