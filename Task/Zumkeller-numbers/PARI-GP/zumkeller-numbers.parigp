\\ Define a function to check if a number is Zumkeller
isZumkeller(n) = {
  my(d = divisors(n));
  my(ds = sum(i=1, #d, d[i])); \\ Total of divisors
  if (ds % 2, return(0)); \\ If sum of divisors is odd, return false
  my(coeffs = vector(ds+1, i, 0)); \\ Create a vector to store coefficients
  coeffs[1] = 1;
  for(i=1, #d, coeffs = Pol(coeffs) * (1 + x^d[i]); coeffs = Vecrev(coeffs); if(#coeffs > ds + 1, coeffs = coeffs[^1])); \\ Generate coefficients
  coeffs[ds \ 2 + 1] > 0; \\ Check if the middle coefficient is positive
}

\\ Generate a list of Zumkeller numbers
ZumkellerList(limit) = {
  my(res = List(), i = 1);
  while(#res < limit,
    if(isZumkeller(i), listput(res, i));
    i++;
  );
  Vec(res); \\ Convert list to vector
}

\\ Generate a list of odd Zumkeller numbers
OddZumkellerList(limit) = {
  my(res = List(), i = 1);
  while(#res < limit,
    if(isZumkeller(i), listput(res, i));
    i += 2; \\ Only check odd numbers
  );
  Vec(res); \\ Convert list to vector
}

\\ Call the functions to get the lists
zumkeller220 = ZumkellerList(220);
oddZumkeller40 = OddZumkellerList(40);

\\ Print the results
print(zumkeller220);
print(oddZumkeller40);
