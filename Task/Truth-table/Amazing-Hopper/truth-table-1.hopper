#include basica/booleanos.h

#include <basico.h>


algoritmo

    variables( R0,R1,R2,R3,R4,T0,T1,T2,T3,T4,T5,T6 )

    VARS=3
    preparar valores de verdad

    preparar cabecera {

         "A","B","C","|","[A=>B","&","B=>C]","=>","A=>C"

    } enlistar en 'cabecera'

    expresión lógica a evaluar {

         OP=>( A, B ),   :: 'R1'
         OP=>( B, C ),   :: 'R2'
         OP&( R1, R2 ),  :: 'R0'
         OP=>( A, C ),   :: 'R3'
         OP=>( R0, R3 )

    } :: 'R4'

    unir columnas( tabla, tabla, separador tabla, R1, R0, R2, R4, R3 )

    insertar cabecera y desplegar tabla

 /* =============== otro ================== */

    VARS=2, preparar valores de verdad

    preparar cabecera {
         "A","B","|","value: A=>B <=> ~AvB"
    } enlistar en 'cabecera'

    expresión lógica a evaluar {
         OP<=>( OP=>(A,B), OP|(OP~(A), B) )

    } :: 'R0'

    unir columnas( tabla, tabla, separador tabla, R0 )

    insertar cabecera y desplegar tabla

 /* =============== otro ================== */

    VARS=4, preparar valores de verdad

    preparar cabecera {
         "A","B","C","D","|","[~AvB","&","A=>C","&","(B","=>","(C=>D))]","=>","A=>C"
    } enlistar en 'cabecera'
    expresión lógica a evaluar {

         OP|( OP~(A), B)     :: 'R0'
         OP=>(A,C)           :: 'R1'
         OP&( R0, R1 )       :: 'T0'
         OP=>( C,D )         :: 'R2'
         OP=>( B, R2 )       :: 'T2'
         OP&( T0, T2 )       :: 'T3'
         OP=>( T3, R1)

    } :: 'T4'

    unir columnas( tabla, tabla, separador tabla, R0, T0,R1, T3, B, T2, R2, T4, R1)

    insertar cabecera y desplegar tabla

 /* =============== otro ================== */

    VARS=2, preparar valores de verdad
    preparar cabecera {
         "A","B","~A","~B","A&B","AvB","A^B","A=>B","A<=>B","A~&B","A~vB"
    } enlistar en 'cabecera'

    expresión lógica a evaluar {

         OP~(A)             :: 'R0'
         OP~(B)             :: 'R1'
         OP&(A,B)           :: 'T0'
         OP|(A,B)           :: 'T1'
         OP^(A,B)           :: 'T2'
         OP=>(A,B)          :: 'T3'
         OP<=>(A,B)         :: 'T4'
         OP~&(A,B)          :: 'T5'
         OP~|(A,B)          :: 'T6'

    }

    unir columnas( tabla, tabla, R0,R1,T0,T1,T2,T3,T4, T5, T6)

    insertar cabecera y desplegar tabla

 /* =============== otro ================== */

    VARS=1, preparar valores de verdad
    preparar cabecera { "A","~A" } enlistar en 'cabecera'

    unir columnas( tabla, tabla, OP~(A) )

    insertar cabecera y desplegar tabla
terminar
