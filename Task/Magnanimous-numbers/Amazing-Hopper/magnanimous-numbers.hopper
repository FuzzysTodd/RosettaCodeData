#include <basico.h>

#proto encontrarunMagnanimouspara(_X_)
#synon _encontrarunMagnanimouspara  siencontréunMagnanimousen

algoritmo

    decimales '0'

    res={}, i=0
    iterar grupo( ++i, #(length(res)<400), \
        i, meter según ( si encontré un Magnanimous en 'i', res ))

    #(utf8("Primeros 45 números magnánimos:\n")),   #(res[1:45])
    #(utf8("\n\nNúmeros magnánimos 241 - 250:\n")), #(res[241:250])
    #(utf8("\n\nNúmeros magnánimos 391 - 400:\n")), #(res[391:400]), NL
    luego imprime esto

terminar

subrutinas

encontrar un Magnanimous para(n)
    tn=n, d=0, i=0, pd=0
    iterar
         último dígito  de 'tn', mover a 'd,tn'
         cuando ' tn ' { #( pd += ( d * 10^i ) ) }
    mientras ' #( tn && is prime(tn+pd) ); ++i '

retornar ' #(not(tn)) '
