get "libhdr"

let prime(n) = valof
$(  let d = 5
    if n<2 resultis false
    if n rem 2=0 resultis n=2
    if n rem 3=0 resultis n=3
    while d*d <= n
    $(  if n rem d=0 resultis false
        d := d+2
        if n rem d=0 resultis false
        d := d+4
    $)
    resultis true
$)

let magnanimous(n) = valof
$(  let left = n and right = 0 and shift = 1
    while left >= 10
    $(  right := right + (left rem 10) * shift
        shift := shift * 10
        left := left / 10
        unless prime(left + right) resultis false
    $)
    resultis true
$)

let start() be
$(  let n = -1
    for i = 1 to 250
    $(  n := n+1 repeatuntil magnanimous(n)
        if i=1 then writes("1 - 45:*N")
        if i=241 then writes("241 - 250:*N")
        if 0<i<=45 | 240<i<=250
        $(  writed(n, 7)
            if i rem 5=0 then wrch('*N')
        $)
    $)
$)
