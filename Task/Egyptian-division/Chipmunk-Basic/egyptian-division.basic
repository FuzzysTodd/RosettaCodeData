100 dim table(32,2)
110 let dividend = 580
120 let divisor = 34
130 let i = 1
140 let table(i,1) = 1
150 let table(i,2) = divisor
160 do while table(i,2) < dividend
170  let i = i+1
180  let table(i,1) = table(i-1,1)*2
190  let table(i,2) = table(i-1,2)*2
200 loop
210 let i = i-1
220 let answer = table(i,1)
230 let accumulator = table(i,2)
240 do while i > 1
250  let i = i-1
260  if table(i,2)+accumulator <= dividend then
270   let answer = answer+table(i,1)
280   let accumulator = accumulator+table(i,2)
290  endif
300 loop
310 print str$(dividend);" divided by ";str$(divisor);" using Egytian division";
320 print " returns ";str$(answer);" mod(ulus) ";str$(dividend-accumulator)
330 end
