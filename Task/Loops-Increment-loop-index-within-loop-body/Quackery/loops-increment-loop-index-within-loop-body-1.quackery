  [ stack ]                     is f.action (   --> s )
  [ stack ]                     is f.end    (   --> s )
  [ stack ]                     is f.incr   (   --> s )
  [ stack ]                     is f.index  (   --> s )

  [ ' [ f.action f.end
        f.incr f.index ] ]      is f.stacks (   --> [ )

  [ f.index share ]             is index    (   --> n )

  [ f.incr replace ]            is incr     ( n -->   )

  [ true f.end replace ]        is end      ( b -->   )

  [ 1 false ]'[
    f.stacks witheach put
    [ f.action share do
      f.incr share
      f.index tally
      1 incr
      f.end share until ]
    f.stacks witheach release ] is from     ( n -->   )
