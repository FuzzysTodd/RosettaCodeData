{{language|PostScript}}
'''PostScript''' is a concatenative, dynamically-typed language with abundant metalanguage facilities. It allows definition of new control structures at runtime, and supports reflection and reification of stack, scopes, and even continuations. With Display PostScript, the language even has facilities for multi-threaded execution. Since the language interpreter is essentially a stack machine, it is suitable for combinator-based programming, and all the higher-order combinators (initiated by joy language) are applicable in PostScript. The language also allows a form of prototype-based, object-orientated programming using dictionaries. See [[Category:Initlib|initlib]] for implementation of higher-order combinators.

PostScript originated as a printer definition language invented by the founders of '''Adobe'''. The language was necessitated by the increasing demands of printing and rendering jobs on the computers of the 1970s. These tasks were therefore pushed to the printers themselves, with the result that printers now had chips and built-in interpreters for PostScript. With the growth of printing complexity, some printers ended up having even more powerful processors than the master systems themselves.

Although now almost displaced by the '''Portable Document Format''' (PDF), also developed by Adobe, PostScript's unique selling proposition lies in it's being a '''Turing complete''' language with support for the basic data types and fundamental structures and concepts of computer science. Many interpreters and viewers of PostScript are available, some even for free. Although primarily a language suited for 2D graphics, PostScript is complete as a language and able to handle normal computation tasks.

== See Also ==
* [http://logand.com/sw/wps/index.html WPS] — PostScript interpreter written in JavaScript.
* [http://www.feiri.de/pcan/ postcanvas] — Open-source PostScript interpreter written in JavaScript.
* [https://www.ghostscript.com/ GhostScript] — Open-source PostScript interpreter with a lot of extensions.
* [https://web.archive.org/web/20160711025645/http://code.google.com/p/xpost/downloads/detail?name=monterey86.pdf ''Object-Oriented Programming in NeWS''] — Paper describing single- and multiple-inheritance implementation using dictionary objects.

{{Language programming paradigm|Concatenative}}